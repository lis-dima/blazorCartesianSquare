@implements IDisposable

@inject NavigationManager NavigationManager
<nav>
    <AuthorizeView>
        <Authorized>
            <form action="Account/Logout" method="post">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                <button type="submit" class="nav-link">
                    Logout
                </button>
            </form>
            <NavLink class="nav-link" href="squares">
                Squares
            </NavLink>
        </Authorized>
        <NotAuthorized>
            <NavLink class="nav-link" href="Account/Register">
                Register
            </NavLink>
            <NavLink class="nav-link" href="Account/Login">
                Login
            </NavLink>
        </NotAuthorized>
    </AuthorizeView>
</nav>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

